# CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE='cargo-test-%p-%m.profraw' cargo test
# grcov . --binary-path ./target/debug/deps/ -s . -t html --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o target/coverage/html
# open target/coverage/html/index.html
# find . -type f -name "*.profraw" -delete
# rm -rf target/coverage/

name: Code coverage with grcov

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  grcov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable  # Usar la misma versi√≥n estable que en local
          override: true
          profile: minimal

      - name: Run tests with coverage instrumentation
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Cinstrument-coverage'
          RUSTDOCFLAGS: '-Cinstrument-coverage'
          LLVM_PROFILE_FILE: 'coverage/cargo-test-%p-%m.profraw'
        run: |
          mkdir -p coverage  # Asegurar que la carpeta de cobertura exista
          cargo test --all --all-features --verbose

      - name: Install grcov
        run: cargo install grcov

      - name: Generate coverage report
        run: |
          grcov coverage/ --binary-path target/debug/deps/ -s . -t lcov --branch \
            --ignore-not-existing --ignore '../*' --ignore '/*' -o coverage/lcov.info

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage/lcov.info
          parallel: true

  finish:
    needs: grcov
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true